#Виконав: Лавренюк Б.В., 1 курс, 122Г, ФТФ
#3. Сформувати функцію для обчислення індексу максимального елемента масиву
#n*n, де 1<=n<=5.
import numpy as np
import random
from time import time

while True:
    try:
        n = int(input('Введіть розмір масиву n*n(лише числа від 1 до 5): '))
        if (n < 1 or n > 5):
            print('Кількість елементів масиву має бути не більше 5 і не менше 1')
            continue
        break
    except ValueError:
        print('Ви можете ввести лише цілі числа від 0 до 5')

start = time()
a = np.array([[random.randint(1, 40) for j in range(n)] for i in range(n)])
print(a)

q = [0][0]
for i in range(len(a)):
    for j in range(len(a[i])):
        if a[i][j] > q:
            q = a[i][j]
print(q)

k = []
p = []
for i in range(len(a)):
    for j in range(len(a[i])):
        if a[i][j] == q:
            k.append(i)
            p.append(j)

print(k, p)
stop = time()
print('Затрачений час: ', stop - start)
#не впевнений, але наверно тут складність алгоритму O(n^2)
#порівнювати немає з чим, бо я не зробив, на жаль, рекурсивне рішення цієї задачі,
#бо не знаю як реалізувати для цієї задачі рекурсивний метод і без використання вбудованих методів,
#але, якщо обійтись без порівняння, з моєї точки зору цей код не тяжкий для розуміння, спочатку
#шукаємо максимальний елемент масиву n*n, а потім знаходимо індекси цього максимального елемента.
#P.S. може я просто не можу до кінця розібратися з рекурсією, але я не хтів би її використовувати
# і мій вибір в більшості б падав на ітераційний метод вирішення задачі
